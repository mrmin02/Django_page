window 에서

python manage.py runserver

or 


py manage.py runserver



프로젝트 생성

django-admin startproject 디렉토리명
후  디렉토리에 들어가서 서버 키면 manage.py 생성됨

어플리케이션 생성
python manage.py startapp polls


-----  DB  ----------

app에서 models 에서 선언한 table 을 생성하기 위함 --> 파일로 생성


python manage.py makemigrations 테이블명

단, 이 테이블 설정에

class Meta:
	managed = True
	db_table = 'home'     # 없으면 default 값으며 테이블 이름이 설정됨.
        app_label = 'home'    # 필수.

필요함.


--->>> 실행 되면 migrations 폴더에 해당 table 관련된 파일이 생성됨 --> 실제 DB 에 적용 시킬 필요가 있음.


db 생성 후 적용

python manage.py migrate



--------------------------

만약에 table 을 삭제했을 경우. 
 
해당 테이블 (A)의 정보를  django_migrations 테이블에 아직 남아 있으므로 
이 테이블에서  A 테이블에 해당하는 행을 지우고, application 에 있는 migrations 폴더 도 삭제 후

다시 파일 생성   python manage.py makemigrations 테이블명

적용 을 실행.    python manage.py migrate


만약  적용단계에서 오류가 난다면 python manage.py migrate --fake 앱이름 
을 실행



-------------------------------

Admin 생성

python manage.py createsuperuser

생성후  db 에서  auth_user 에서 확인 가능.

등록 된 app 에 admin 에서  register 해주면 관리자가 해당 app 의 db 를 관리 가능.


from django.contrib import admin
from memo.models import Memo

	#class MemoAdmin(admin.ModelAdmin):
	#    list_display = ('content','last_modified')

	#admin.site.register(Memo, MemoAdmin)

admin.site.register(Memo)



-----------------------

RESTFUL  

pip install djangorestframework
pip install markdown       # Markdown support for the browsable API.
pip install django-filter  # Filtering support
settings 에 INSTALLED_APPS 에 지정해줘 야함.

INSTALLED_APPS = (
    ...
    'rest_framework',
)






fetch
(setting.py) 에 적음.

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication'
    ]
}

urls.py 
path('', include('rest_framework.urls'))


사용 예.

fetch("/api/v1/endpoint/5/", {
    method: "put",
    credentials: "same-origin",
    headers: {
        "X-CSRFToken": getCookie("csrftoken"),
        "Accept": "application/json",
        "Content-Type": "application/json"
    },
    body: JSON.stringify(myData)
}).then(function(response) {
    return response.json();
}).then(function(data) {
    console.log("Data is ok", data);
}).catch(function(ex) {
    console.log("parsing failed", ex);
});












DB



pip install mysqlclient 설치..

https://victorydntmd.tistory.com/275 ( 설치 시 참조)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django',
        'USER':'root',
        'PASSWORD':'2222',
        'HOST':'localhost', 
        'PORT':'',
    }
}


출처: https://dlwodus.tistory.com/317 [MY MEMO]


models.py  에서 foreignkey 가 에러가 날 수 있는데, 2.0 버전 이후부터 on_delete 값을 줘야된다고 한다.
ex) on_delete=models.CASCADE


static

INSTALLED_APPS 에 
STATIC_URL = '/static/'
html 에서 
{%load static %}
<img src="{% static "my_app/example.jpg" %}" alt="My image">


사용자로 부터 이미지 파일을 받음.

setting.py

MEDIA_URL = '/media/' # upload image (user)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # upload directory

html

<form method='post' action='' enctype="multipart/form-data">
	{% csrf_token %}
	<table>
		{{ form.as_table }}
	</table>
	<input type="submit">
</form>

https://youtu.be/ptnYBctoexk






